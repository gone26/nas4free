--- bge/if_bge.c.orig	2016-06-18 02:09:27.525085000 +0200
+++ bge/if_bge.c	2016-06-18 02:38:52.000000000 +0200
@@ -170,6 +170,7 @@
 	{ BCOM_VENDORID,	BCOM_DEVICEID_BCM5715 },
 	{ BCOM_VENDORID,	BCOM_DEVICEID_BCM5715S },
 	{ BCOM_VENDORID,	BCOM_DEVICEID_BCM5717 },
+	{ BCOM_VENDORID,	BCOM_DEVICEID_BCM5717C },
 	{ BCOM_VENDORID,	BCOM_DEVICEID_BCM5718 },
 	{ BCOM_VENDORID,	BCOM_DEVICEID_BCM5719 },
 	{ BCOM_VENDORID,	BCOM_DEVICEID_BCM5720 },
@@ -310,6 +311,7 @@
 	{ BGE_CHIPID_BCM5715_A3,	"BCM5715 A3" },
 	{ BGE_CHIPID_BCM5717_A0,	"BCM5717 A0" },
 	{ BGE_CHIPID_BCM5717_B0,	"BCM5717 B0" },
+	{ BGE_CHIPID_BCM5717_C0,	"BCM5717 C0" },
 	{ BGE_CHIPID_BCM5719_A0,	"BCM5719 A0" },
 	{ BGE_CHIPID_BCM5720_A0,	"BCM5720 A0" },
 	{ BGE_CHIPID_BCM5755_A0,	"BCM5755 A0" },
@@ -485,6 +487,7 @@
 static void bge_stop_fw(struct bge_softc *);
 static int bge_reset(struct bge_softc *);
 static void bge_link_upd(struct bge_softc *);
+static void bge_setwol(struct bge_softc *);
 
 static void bge_ape_lock_init(struct bge_softc *);
 static void bge_ape_read_fw_ver(struct bge_softc *);
@@ -2689,6 +2692,10 @@
 		 * registers.
 		 */
 		switch (pci_get_device(dev)) {
+		case BCOM_DEVICEID_BCM5717C:
+		    /* 5717 C0 seems to belong to 5720 line. */
+		    id = BGE_CHIPID_BCM5720_A0;
+		    break;
 		case BCOM_DEVICEID_BCM5717:
 		case BCOM_DEVICEID_BCM5718:
 		case BCOM_DEVICEID_BCM5719:
@@ -3735,7 +3742,7 @@
 	IFQ_SET_READY(&ifp->if_snd);
 	ifp->if_hwassist = sc->bge_csum_features;
 	ifp->if_capabilities = IFCAP_HWCSUM | IFCAP_VLAN_HWTAGGING |
-	    IFCAP_VLAN_MTU;
+	    IFCAP_VLAN_MTU | IFCAP_WOL_MAGIC;
 	if ((sc->bge_flags & (BGE_FLAG_TSO | BGE_FLAG_TSO3)) != 0) {
 		ifp->if_hwassist |= CSUM_TSO;
 		ifp->if_capabilities |= IFCAP_TSO4 | IFCAP_VLAN_HWTSO;
@@ -6073,6 +6080,7 @@
 	sc = device_get_softc(dev);
 	BGE_LOCK(sc);
 	bge_stop(sc);
+	bge_setwol(sc);
 	BGE_UNLOCK(sc);
 
 	return (0);
@@ -6771,3 +6779,32 @@
 	}
 	return (*func == NULL ? ENXIO : 0);
 }
+
+static void
+bge_setwol(struct bge_softc *sc)
+{
+	struct ifnet *ifp;
+	uint16_t pmstat;
+	int pmc;
+
+	ifp = sc->bge_ifp;
+
+	if ((ifp->if_capenable & IFCAP_WOL_MAGIC) == 0)
+           return;
+
+	if (pci_find_cap(sc->bge_dev, PCIY_PMG, &pmc) != 0)
+	    return;
+
+	BGE_SETBIT(sc, BGE_MAC_MODE, BGE_MACMODE_MAGIC_PKT_ENB);
+	BGE_CLRBIT(sc, BGE_MAC_MODE, BGE_MACMODE_PORTMODE);
+	BGE_SETBIT(sc, BGE_MAC_MODE, BGE_PORTMODE_GMII);
+
+	BGE_SETBIT(sc, BGE_RX_MODE, BGE_RXMODE_ENABLE);
+
+	/* Request PME. */
+	pmstat = pci_read_config(sc->bge_dev,
+	   pmc + PCIR_POWER_STATUS, 2);
+	pmstat |= PCIM_PSTAT_PME | PCIM_PSTAT_PMEENABLE;
+	pci_write_config(sc->bge_dev,
+	   pmc + PCIR_POWER_STATUS, pmstat, 2);
+}
