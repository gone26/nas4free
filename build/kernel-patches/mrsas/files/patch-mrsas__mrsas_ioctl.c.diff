--- mrsas/mrsas_ioctl.c.orig	2016-06-18 07:11:55.310830000 +0200
+++ mrsas/mrsas_ioctl.c	2016-06-20 02:30:47.000000000 +0200
@@ -138,6 +138,11 @@
 	kern_sge32 = (struct mrsas_sge32 *)
 	    ((unsigned long)cmd->frame + user_ioc->sgl_off);
 
+	memset(ioctl_data_tag, 0, (sizeof(bus_dma_tag_t) * MAX_IOCTL_SGE));
+	memset(ioctl_data_dmamap, 0, (sizeof(bus_dmamap_t) * MAX_IOCTL_SGE));
+	memset(ioctl_data_mem, 0, (sizeof(void *) * MAX_IOCTL_SGE));
+	memset(ioctl_data_phys_addr, 0, (sizeof(bus_addr_t) * MAX_IOCTL_SGE));
+
 	/*
 	 * For each user buffer, create a mirror buffer and copy in
 	 */
@@ -246,7 +251,14 @@
 	 * cmd to the SCSI mid-layer
 	 */
 	cmd->sync_cmd = 1;
-	mrsas_issue_blocked_cmd(sc, cmd);
+	ret = mrsas_issue_blocked_cmd(sc, cmd);
+	if (ret == ETIMEDOUT) {
+		mrsas_dprint(sc, MRSAS_OCR,
+		    "IOCTL command is timed out, initiating OCR\n");
+		sc->do_timedout_reset = MFI_DCMD_TIMEOUT_OCR;
+		ret = EAGAIN;
+		goto out;
+	}
 	cmd->sync_cmd = 0;
 
 	/*
@@ -435,6 +447,17 @@
 			device_printf(sc->mrsas_dev, "Cannot alloc MFI frame memory\n");
 			return (ENOMEM);
 		}
+		/*
+		 * For MFI controllers.
+		 * max_num_sge = 60
+		 * max_sge_sz  = 16 byte (sizeof megasas_sge_skinny)
+		 * Totl 960 byte (15 MFI frame of 64 byte)
+		 *
+		 * Fusion adapter require only 3 extra frame.
+		 * max_num_sge = 16 (defined as MAX_IOCTL_SGE)
+		 * max_sge_sz  = 12 byte (sizeof  megasas_sge64)
+		 * Total 192 byte (3 MFI frame of 64 byte)
+		 */
 		memset(cmd->frame, 0, MRSAS_MFI_FRAME_SIZE);
 		cmd->frame->io.context = cmd->index;
 		cmd->frame->io.pad_0 = 0;
